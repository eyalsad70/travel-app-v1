
Project Root/
├── main.py             # Main entry point for the backend logic
| BOT Handlers ######
├── my_bot.py           # init/listen BOT, handle requests from user
├── bot_brain.py        # handle all bot logics
├── user_session.py     # hold user info for each BOT user
| API Handlers ######
├── my_openai.py        # use GPT 4.2 through Rapid API to extract tourist attractions and additional data near desired location
├── google_maps_api.py  # extract hotels/restaurants and other data through Google Places API (google cloud paid service)
├── aiTripPlanner.py    # extract detailed travel recommandations for X days of travel (available via Rapid API)- will be used in later version
| Storage Utilities  ########
├── my_json_utilities.py # save and read raw JSON files (used to cache data received from APIs)
├── create_sql_db_engine.py # create db engine for SQL server
├── my_sql_db.py         # SQL Datasets are created from JSON rwa data - save/update/read transformed structured data to/from SQL tables
├── csv_files.py         # used to create/update/retreive datasets made of rwa json data
├── s3_repositiry.py     # save/read json raw files using AWS S3 (usage of S3 is optional)
| General Utilities  ######
├── utils.py             # general utilities 
├── my_logger.py         # Logger file
├── key_loader.py        # load all access keys/tokens used in the project from environment (help.txt explains how to save those as environment variables)

├── Dockerfile          # Defines the Docker environment for running the Python app
├── requirements.txt    # Lists all dependencies for the Python project
├── Data  # local cache of locations and attractions being extracted already
    ├── Poland
    ├── Israel
    ├── ....
